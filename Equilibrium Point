// { Driver Code Starts
#include <iostream>
using namespace std;


 // } Driver Code Ends
class Solution{
    public:
    // Function to find equilibrium point in the array.
    // a: input array
    // n: size of array
    int equilibriumPoint(long long a[], int n) {
        
        if(n==1) return 1;
        
        //if(n==2) return -1;
    
        int j,k,sum1=0,sum=0,x=0;
        for(int i=1;i<n;i++)
        {
            j=0,sum=0,sum1=0;
            while(j<i)
            {
              sum=sum+a[j];
              j++;
            }

            k=i+1;
            while(k<n)
            {
                sum1=sum1+a[k];
                k++;
            }
            
            //cout << i << " ";
           if(sum1==sum) return i+1;
        }
        
        return -1;
    }

};

// { Driver Code Starts.


int main() {

    long long t;
    
    //taking testcases
    cin >> t;

    while (t--) {
        long long n;
        
        //taking input n
        cin >> n;
        long long a[n];

        //adding elements to the array
        for (long long i = 0; i < n; i++) {
            cin >> a[i];
        }
        
        Solution ob;

        //calling equilibriumPoint() function
        cout << ob.equilibriumPoint(a, n) << endl;
    }
    return 0;
}
  // } Driver Code Ends
